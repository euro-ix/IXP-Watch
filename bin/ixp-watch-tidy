#!/bin/bash

#
# Copyright 2003 - 2012 London Internet Exchange Ltd ('LINX')
# Copyright 2012 - Robert Lister <rob@lonap.net>
# See the file LICENSE for further details.
#
#
# This file is part of IXP Watch
#
# IXP Watch is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, version v2.0 of the License.
#
# IXP Watch is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License v2.0
# along with IXP Watch If not, see:
#
# http://www.gnu.org/licenses/gpl-2.0.html


# IXP Watch Sample Tidy:

# Sample script to be called by cron, this clears out
# the sample files after some number of days to avoid disk
# filling up on the host machine!

# Where is config vars file:
CONFIG=/etc/ixpwatch/config.sh

# Config file can also be specified from the command line with -c <filename>:
optstring=":c:"

while getopts ${optstring} arg; do
  case "${arg}" in
    c)
            # Set config file:
            CONFIG=${OPTARG}
    ;;
  esac
done


if [ ! -f ${CONFIG} ] ; then
 echo "Could not open config file ${CONFIG}!"
 exit 1
fi

source ${CONFIG}

if [ ! -d "${SAMPLE_ROOT}" ] ; then
        echo "ERROR: SAMPLE_ROOT not found: ${SAMPLE_ROOT}!"
        exit 1
fi

cd ${SAMPLE_ROOT}

# Check that we can cd in the right directory before we start
# trying to delete stuff!

if [ "${PWD}" != "${SAMPLE_ROOT}" ] ; then
        echo "ERROR: Unable to cd to ${SAMPLE_ROOT}!"
        exit 1
fi

# Remove samples files over 10, (or PURGE_SAMPLE_DAYS if set) days old:
find ${SAMPLE_ROOT} -type f -ctime +${PURGE_SAMPLE_DAYS:-10} -exec rm {} \;
#find ${SAMPLE_ROOT} -type f -ctime +${PURGE_SAMPLE_DAYS:-10} -exec ls {} \;

# Remove empty directories:
find ${SAMPLE_ROOT} -type d -empty -exec rmdir {} \;
#find $SAMPLE_ROOT -type d -empty -exec ls {} \;

# Compress reports over ZIP_REPORTS_DAYS old:
if [ -n "${ZIP_REPORTS_DAYS}" ] ; then

   if [ ! -d "${LOG_ROOT}" ] ; then
      echo "ERROR: LOG_ROOT not found: ${LOG_ROOT}!"
      exit 1
   fi

   REP_EXTN=${REP_EXTN:=TXT}
   PURGE_REP_EXTN="${REP_EXTN}.gz"

   find ${LOG_ROOT} -type f -ctime +${ZIP_REPORTS_DAYS} -name "*.${REP_EXTN}" -exec ${GZIP} -9 {} \;

fi

# Delete reports over PURGE_REPORTS_DAYS old:
if [ ${PURGE_REPORTS_DAYS:=0} -gt 0 ] ; then

   if [ ! -d "${LOG_ROOT}" ] ; then
      echo "ERROR: LOG_ROOT not found: ${LOG_ROOT}!"
      exit 1
   fi

   # Safety check before doing mass-delete:
   cd ${LOG_ROOT}
   if [ "${PWD}" != "${LOG_ROOT}" ] ; then
     echo "ERROR: Unable to cd to ${LOG_ROOT}!"
     exit 1
   fi

   PURGE_REP_EXTN=${PURGE_REP_EXTN:=$REP_EXTN}

   find ${LOG_ROOT} -type f -ctime +${PURGE_REPORTS_DAYS} -name "*.${PURGE_REP_EXTN}" -exec rm {} \;

fi
