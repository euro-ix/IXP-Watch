#!/bin/bash
# This file is part of IXP Watch
#
# IXP Watch is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, version v2.0 of the License.
#
# IXP Watch is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License v2.0
# along with IXP Watch If not, see:
#
# http://www.gnu.org/licenses/gpl-2.0.html

################################################################################
#### Local configuration. Things you WILL need to check                        #
################################################################################

# Directories to put things in:
# *** These need to exist for this to work properly! ***

SAMPLE_ROOT=/var/ixpwatch/samples
LOG_ROOT=/var/ixpwatch/watch
TEMP_DIR=/var/ixpwatch/tmp

DO_RRD=0                  # Plot RRT?
RRDTOOL=/usr/bin/rrdtool  # If so, where is RRDtool?
# Where to put RRD files and HTML files if DO_RRD is enabled:
HTML_DIR=/var/ixpwatch/www
RRD_DIR=${HTML_DIR}/graphs
GRAPH_DIR=${HTML_DIR}/graphs

# Where to find tshark:
TSHARK=/usr/bin/tshark

MAILPROG=/usr/bin/mail   # command to send e-mails
# (redhat this is /bin/mail by default)

# Slack alerter script. Uncomment to enable:
# SLACK_ALERTER=/usr/local/bin/slack_alerter
# SLACK_ALERTER_OPTS='-u ixpwatch -c '#ixpwatch''

GZIP='nice -n 10 /bin/gzip'       # Location of gzip prog

# REPORT_EMAIL='SOMETHING@YOUR.DOMAIN.HERE' # E-mail to send regular reports to
# (or leave REPORT_EMAIL undefined if you don't want reports)

ALARM_EMAIL='YOU@YOUR.DOMAIN.HERE' # E-mail to send bad thing alarms to

ALARM_PAGER='YOU@YOUR.DOMAIN.HERE' # E-Mail to page things out e.g sms.
# (or leave ALARM_PAGER undefined if you don't want SMS)

CAP_INTERFACE=eth0        # Interface that we run the capture on

SAMPLE_TIME=900           # Capture time in seconds (default 15 minutes)

NETWORK='YOUR_NETWORK_HERE'   # Network Name. - some name

LOCAL_FACIL=local4.debug  # LOCAL syslog facility. Leave blank to turn off.

LOGGER=/usr/bin/logger    # syslog command

# Optional syslog hosts to send alerts to
# Check the /usr/bin/logger commands to ensure
# You are using "-n" or "-h" accordingly for Linux or BSD.

# Uncomment to enable: 
# LOGHOSTS="192.168.100.10 192.168.200.20"

LOG_FACILITY=local4.debug # Facility to send REMOTE syslog logs to

ARP_WARNLEVEL=4000        # Alert when number of ARPS Per Minute reaches this.
                          # You may not know this now, but you can use the reports
                          # to work out what is a reasonable level.

SPANNING_TREE_BAD=1       # Do you want STP frames reported? 1=Yes 0=No.

WRITE_COUNTS=0            # Write counts to /tmp/ixpwatch.$NETWORK.counts?
                          # (useful if you want to plot graphs etc) 1=Yes 0=No.
                          # (See also COUNTSFILE below - you may need to change it!)

# Where to write stats counts to, (if enabled)
# If you use my format, make sure what you've got in $NETWORK won't break
# the filename (no "/ | or nasty chars or spaces etc.)
COUNTSFILE=$TEMP_DIR/ixp-watch.$NETWORK.counts

MAX_SAMPLE_SIZE=52428800  # Maximum sensible file size to try and process (50M)

ENORMOUS_SAMPLE=$(( $MAX_SAMPLE_SIZE \* 25 ))  # If the file is too enormous, just delete it.

# Disk space usage for disk where samples are stored.
# (Comment this out to disable auto sample purge based on free disk space)
DISK_PERCENT_PROG="/bin/df -h --output=pcent ${SAMPLE_ROOT}"
DISK_PERCENT_MAX=95   # Max disk use before deleting samples.

# As of 1.14, we try to make the list of dead BGP sessions more helpful by resolving
# the IP address, rather than just a big list of IP addresses. If you want to use
# the old format (no resolving), set BGPOPENS_OLD_FORMAT=1.
BGPOPENS_OLD_FORMAT=1

#
# Optional tools settings (sponge, auto_sponge, update_ethers)
#
MY_NET="5.57.80.0"  # network base address
MASK="22"           # network CIDR mask
SANITY_CHECK="5.57.8" # lock to only allow these addresses to be added.

# Where to get sponge list: (auto_sponge tool for IXP Manager)
URL_ARPSPONGE="https://<your_ixpmanager_server>/cgi-bin/json_arpsponges"

# Auto-sponge / update_ethers
JQ="/usr/bin/jq"       # Where is jq (for JSON) auto_sponge / update_ethers
COMM="/usr/bin/comm"   # comm cmd auto_sponge

WGET="/usr/bin/wget"   # Where is wget/curl
WGET_OPTS="-qO -"      # wget opts to get to stdout

# If using curl instead:
# WGET="/usr/bin/curl"   # Where is wget/curl
# WGET_OPTS="-o -"       # wget opts to get to stdout

SIPCALC="/usr/bin/sipcalc" # sipcalc
IP="/sbin/ip"              # ip cmd
NETSTAT=$(which netstat)    # netstat cmd

# Update_ethers tool
# Where to get mac address list: (update_ethers tool for IXP Manager)
URL_ETHERS="https://<your_ixpmanager_server>/cgi-bin/json_ethers"
# ETHERSFILE=/etc/ethers

# URL to include in alerts (email/slack)
URL_ALERTS="https://<your_ixpwatch_server>/ixpwatch/report_1.shtml"
